<?xml version="1.0" encoding="UTF-8"?>
<!-- status:这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出。
     monitorInterval:Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数,最小间隔为5秒,0或负数表示不检测。
             注：本配置文件的目标是将不同级别的日志输出到不同文件，最大2MB一个文件， 文件数据达到最大值时，旧数据会被压缩并放进指定文件夹 -->
<Configuration status="off" monitorInterval="0">
    <!-- 常量引用 -->
    <properties>
        <!-- 配置日志文件输出目录 -->
        <property name="LOG_ROOT">E://logs</property>
    </properties>
    <Appenders>
        <!-- 优先级从高到低分别是 OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL -->
        <!-- 单词解释： Match：匹配 DENY：拒绝 Mismatch：不匹配 ACCEPT：接受 -->
        <!-- DENY，日志将立即被抛弃不再经过其他过滤器； NEUTRAL，有序列表里的下个过滤器过接着处理日志； ACCEPT，日志会被立即处理，不再经过剩余过滤器。 -->
        <!--输出日志的格式
         %d{yyyy-MM-dd HH:mm:ss, SSS} : 日志生产时间
         %p : 日志输出格式
         %c : logger的名称
         %m : 日志内容，即 logger.info("message")
         %n : 换行符
         %C : Java类名
         %L : 日志输出所在行数
         %M : 日志输出所在方法名
         hostName : 本地机器名
         hostAddress : 本地ip地址 -->

        <!-- 这个输出控制台的配置，这里输出error及以上级别的信息到System.err，在eclipse控制台上看到的是红色文字 -->
        <Console name="console_info" target="SYSTEM_ERR">
<!--            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY" />-->
            <PatternLayout pattern="%5p [%t] %d{yyyy-MM-dd HH:mm:ss} (%F:%L) %m%n" />
        </Console>
        <File name="info" fileName="${LOG_ROOT}/mylogs.log" append="false">
            <PatternLayout pattern="%d{yyyy.MM.dd HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n" />
        </File>

    </Appenders>
    <Loggers>

        <!-- 配置日志的根节点 -->
        <!-- 定义logger，只有定义了logger并引入了appender，appender才会生效 -->
        <!-- root logger,一般用于放置所有的appender -->
        <root level="info" additivity="false">
            <!-- 这里是输入到控制台-->
            <appenderRef ref="console_info"/>
            <!-- 这里是输入到文件，很重要-->
            <appenderRef ref="info" />
        </root>
        <!-- 接收appender -->
        <logger name="org.apache.http" level="warn" />
        <!-- Spring -->
        <logger name="org.springframework" level="WARN" />
        <!-- mybatis loggers -->
        <logger name="com.ibatis" level="DEBUG" />
        <logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />
        <logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />
        <logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />
        <!-- sql loggers -->
        <logger name="java.sql.Connection" level="DEBUG"  additivity="true"/>
        <logger name="java.sql.Statement" level="DEBUG" additivity="true" />
        <logger name="java.sql.PreparedStatement" level="=debug,stdout"  additivity="true"/>
        <logger name="java.sql.ResultSet" level="DEBUG"  additivity="true"/>
        <!-- General Apache libraries -->
        <logger name="org.apache" level="WARN" />
        <!-- Default Shiro logging -->
        <logger name="org.apache.shiro" level="WARN" />
        <!-- Disable verbose logging -->
        <logger name="org.apache.shiro.util.ThreadContext" level="WARN" />
        <logger name="org.apache.shiro.cache.ehcache.EhCache" level="WARN" />
        <!-- 对包进行更详细的配置 -->
        <!-- additivity表示是否追加,防止重复,因为root已经接收过一次了 -->
    </Loggers>
</Configuration>